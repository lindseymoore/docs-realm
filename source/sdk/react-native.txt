:template: product-landing
:hidefeedback: header
:noprevnext:

.. _react-native-intro:

======================
Realm React Native SDK
======================

.. toctree::
   :titlesonly:
   :hidden:
   
   Install Realm for React Native </sdk/react-native/install>
   Quick Start </sdk/react-native/quick-start-local>
   Quick Start with Sync </sdk/react-native/quick-start>
   Quick Start with Expo </sdk/react-native/quick-start-expo>
   Use Realm React </sdk/react-native/use-realm-react>
   Fundamentals </sdk/react-native/fundamentals>
   Data Types </sdk/react-native/data-types>
   Usage Examples </sdk/react-native/examples>
   Integration Guides </sdk/react-native/integrations>
   Advanced Guides </sdk/react-native/advanced>
   Test & Debug </sdk/react-native/test-and-debug>
   API Reference <https://www.mongodb.com/docs/realm-sdks/js/latest/>
   Upgrade from Stitch to Realm </sdk/react-native/migrate>
   Release Notes <https://github.com/realm/realm-js/releases>

.. introduction::

   Use the Realm React Native SDK to develop iOS and Android in 
   JavaScript or TypeScript.

.. kicker:: Learning Paths

Get Started with Realm Swift
----------------------------

.. card-group::
   :columns: 3
   :style: extra-compact

   .. card::
      :headline: Quick Start
      :cta: See Code Examples
      :url: https://www.mongodb.com/docs/realm/sdk/react-native/quick-start-local/
      :icon: /images/icons/branding_2022/Technical_ATLAS_Functions3x.png
      :icon-alt: Functions Icon

      Minimal-explanation code examples of how to work with Realm Database.

   .. card::
      :headline: Working Example App
      :cta: Explore an Example App
      :url: https://www.mongodb.com/docs/atlas/app-services/template-apps/
      :icon: /images/icons/branding_2022/Technical_REALM_Mobile3x.png
      :icon-alt: Realm Mobile Icon

      Learn from example by dissecting a working React Native client app that 
      uses Realm Database with Device Sync.

   .. card::
      :headline: Guided Tutorial
      :cta: Follow the Tutorial
      :url: https://www.mongodb.com/docs/realm/tutorial/react-native/ 
      :icon: /images/icons/branding_2022/General_CONTENT_Tutorial3x.png
      :icon-alt: Tutorial Icon

      Follow a guided tutorial to learn how to adapt the example app to 
      create your own working Realm app.

.. kicker:: What You Can Do

Develop Apps with Realm Database
--------------------------------

Use free open-source Realm Database as a local object store on a device.
Use Device Sync to keep data in sync with your MongoDB Atlas cluster and 
other clients.

.. tabs::

  .. tab:: Use Realm Database Locally
      :tabid: local-realm

      .. procedure::

         .. step:: Install the Realm React Native SDK

            Use CocoaPods to :ref:`react-native-install` in your
            project.

            Import Realm in your project files to get started.

         .. step:: Define an Object Schema

            Use React Native to idiomatically :ref:`define an object schema 
            <react-native-define-a-realm-object-schema>`. 

         .. step:: Open a Realm

            Realm Database stores objects in Realm files on your device, 
            or you can open an in-memory realm which does not create a file.
            :ref:`Configure and open a realm <react-native-open-close-realm>` 
            to get started reading and writing data.

         .. step:: Read and Write Data

            :ref:`Create <react-native-create-a-new-object>`, :ref:`read <react-native-read-operations>`, 
            :ref:`update <react-native-update-an-object>`, and :ref:`delete <react-native-delete-an-object>` 
            objects from the realm. :ref:`Filter data <react-native-filter-queries>` with React Native using
            Realm Query Language. 

         .. step:: React to Changes

            Realm's live objects mean that your data is always up-to-date.
            You can :ref:`register a notification handler <react-native-react-to-changes>` 
            to watch for changes and perform some logic, such as updating 
            your UI. 

      .. image:: /images/illustrations/Mobile_hero_green.png
         :alt: Realm Mobile Illustration

  .. tab:: Sync Data Across Devices
      :tabid: device-sync

      .. procedure::

         .. step:: Connect to an Atlas App Services App

            Configure :ref:`Device Sync in an App Services App 
            <realm-sync-get-started>`. Define data access rules. Use 
            Development Mode to infer your schema from your data model.

            Then, :ref:`connect to the backend <react-native-connect-to-mongodb-realm-backend-app>` 
            from your client.

         .. step:: Authenticate a User

            Use one of our authentication providers to :ref:`authenticate a 
            user <react-native-authenticate-users>`. App Services provides access
            to popular authentication providers, such as Apple, Google, or 
            Facebook. Use our built-in email/password provider to manage 
            users without a third-party, or use custom JWT authentication to 
            integrate with other authentication providers. Anonymous authentication
            provides access without requiring a login or persisting user data.

         .. step:: Open a Synced Realm

            Instead of opening a local realm, :ref:`configure and open a 
            synced Realm <react-native-open-close-realm>`. 
            :ref:`Subscribe to a query <react-native-sync-subscribe-to-queryable-fields>` 
            to determine what data the synced realm can read and write.

         .. step:: Read and Write Synced Data

            The APIs to read and write data from a realm are the same 
            whether you're using a synced or local realm. Data that you 
            read and write is automatically kept in sync with your Atlas 
            cluster and other clients. Apps keep working offline and 
            deterministically sync changes whenever a network connection is 
            available. 

      .. image:: /images/illustrations/Spot_AzureBlue_Mobile_Tech_RealmSync.png
         :alt: Realm Sync Illustration

  .. tab:: Build with Atlas App Services
      :tabid: app-services

      .. container::

         Call Serverless Functions
         ~~~~~~~~~~~~~~~~~~~~~~~~~

         You can :ref:`call serverless Functions <ios-call-a-function>` 
         from your client application that run in an App Services backend.

         .. code-block:: javascript
            :copyable: false

            const myFunctionResult = await user.functions.myServerlessFunction(arguments);

         Query MongoDB Atlas
         ~~~~~~~~~~~~~~~~~~~

         You can :ref:`query data stored in MongoDB <react-native-query-data>`
         directly from your client application code.

         .. code-block:: javascript
            :copyable: false

            const animals = realm.objects("Animal");
            const queryFilter = animals.filtered("name == cheetah"); 

         Authenticate Users
         ~~~~~~~~~~~~~~~~~~

         Authenticate users with built-in and third-party :ref:`authentication 
         providers <react-native-authenticate-users>`. Use the authenticated user to 
         access App Services.

         .. code-block:: javascript
            :copyable: false

            const credentials = Realm.Credentials.anonymous();
            const user = await app.logIn(credentials);

      .. image:: /images/illustrations/Spot_MauvePurple_APIs_Tech_RealmApp.png
         :alt: App Services Illustration

.. kicker:: Essential Documentation

Recommended Reading
-------------------

.. card-group::
   :columns: 3
   :style: extra-compact

   .. card::
      :headline: JavaScript API Reference
      :cta: React Native Reference
      :url: https://www.mongodb.com/docs/realm-sdks/js/latest/
      :icon: /images/icons/branding_2022/General_ACTION_BestPractices3x.png
      :icon-alt: Realm Icon

      Explore generated reference docs for the RealmSwift APIs.

   .. card::
      :headline: React Native Quick Start with Expo
      :cta: Explore the Quick Start
      :url: https://www.mongodb.com/docs/realm/sdk/react-native/quick-start-expo/
      :icon: /images/icons/react_native_sdk.svg
      :icon-alt: React Native Icon

      Build and deploy a React Native application quickly using the
      fully working Realm Expo template application.
       
   

    