.. _sdks-compact-file:

=========================
Reduce Database File Size
=========================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. tabs-selector:: drivers

.. meta::
  :description: Short description of the consolidated page used for SEO.
  :keywords: Realm, C++ SDK, Flutter SDK, Kotlin SDK, Java SDK, Node.js SDK, Swift SDK, code example

.. facet::
 :name: genre
 :values: tutorial

.. facet::
  :name: programming_language
  :values: cpp, csharp, dart, java, kotlin, objective-c, swift

The size of a realm file is always larger than the total 
size of the objects stored within it. This architecture enables some of 
realm's great performance, concurrency, and safety benefits. 

Realm writes new data within unused space tracked inside a
file. In some situations, unused space may comprise a significant 
portion of a realm file. Realm's default behavior is to automatically 
compact a realm file to prevent it from growing too large. 
You can use manual compaction strategies when 
automatic compaction is not sufficient for your use case 
or you're using a version of the SDK that doesn't have automatic 
compaction.

Automatically Reduce File Size
------------------------------

The SDK automatically compacts Realm files in the background by continuously reallocating data 
within the file and removing unused file space. Automatic compaction is sufficient for 
minimizing the Realm file size for most applications. 

Automatic compaction begins when the size of unused space in the file is more than twice the size of user 
data in the file. Automatic compaction only takes place when
the file is not being accessed.

Manual Compaction Strategies
----------------------------

.. include:: /includes/manual-compaction.rst

Realm reduces the file size by writing a new (compact) version of the file, and 
then replacing the original with the newly-written file. Therefore, to compact, 
you must have free storage space equivalent to the original realm file size. 

You can configure realm to automatically compact the database each time a
realm is opened, or you can compact the file without first obtaining a
realm instance.

Reduce File Size on Launch of Realm
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. tabs-drivers::

   .. tab::
      :tabid: cpp-sdk

      .. include:: /includes/api-details/cpp/manage-files/reduce-file-size-on-launch-description.rst

   .. tab::
      :tabid: csharp

      .. include:: /includes/api-details/csharp/manage-files/reduce-file-size-on-launch-description.rst
      
   .. tab::
      :tabid: dart

      .. include:: /includes/api-details/dart/manage-files/reduce-file-size-on-launch-description.rst

   .. tab::
      :tabid: java

      .. include:: /includes/api-details/java/manage-files/reduce-file-size-on-launch-description.rst

   .. tab::
      :tabid: javascript

      .. include:: /includes/api-details/javascript/manage-files/reduce-file-size-on-launch-description.rst

   .. tab::
      :tabid: kotlin

      .. include:: /includes/api-details/kotlin/manage-files/reduce-file-size-on-launch-description.rst

   .. tab::
      :tabid: objectivec

      .. include:: /includes/api-details/objectivec/manage-files/reduce-file-size-on-launch-description.rst

   .. tab::
      :tabid: swift

      .. include:: /includes/api-details/swift/manage-files/reduce-file-size-on-launch-description.rst

   .. tab::
      :tabid: typescript

      .. include:: /includes/api-details/typescript/manage-files/reduce-file-size-on-launch-description.rst

.. include:: /includes/sdk-examples/manage-files/reduce-file-size-on-launch.rst

Compact() Method
~~~~~~~~~~~~~~~~

.. tabs-drivers::

   .. tab::
      :tabid: cpp-sdk

      The C++ SDK does not currently support this API.

   .. tab::
      :tabid: csharp

      .. include:: /includes/api-details/csharp/manage-files/reduce-file-size-compact-method.rst
      
   .. tab::
      :tabid: dart

      .. include:: /includes/api-details/dart/manage-files/reduce-file-size-compact-method.rst

   .. tab::
      :tabid: java

      .. include:: /includes/api-details/java/manage-files/reduce-file-size-compact-method.rst

   .. tab::
      :tabid: javascript

      .. include:: /includes/api-details/javascript/manage-files/reduce-file-size-compact-method.rst

   .. tab::
      :tabid: kotlin

      .. include:: /includes/api-details/kotlin/manage-files/reduce-file-size-compact-method.rst

   .. tab::
      :tabid: objectivec

      The Swift SDK for Objective C does not currently support this API.

   .. tab::
      :tabid: swift

      The Swift SDK does not currently support this API.

   .. tab::
      :tabid: typescript

      .. include:: /includes/api-details/typescript/manage-files/reduce-file-size-on-launch-description.rst

.. include:: /includes/sdk-examples/manage-files/reduce-file-size-compact-method.rst

Make a Compacted Copy
~~~~~~~~~~~~~~~~~~~~~

.. tabs-drivers::

   .. tab::
      :tabid: cpp-sdk

      The C++ SDK does not currently support this API.

   .. tab::
      :tabid: csharp

      The .NET SDK for C# does not currently support this API.
      
   .. tab::
      :tabid: dart

      The Flutter SDK for Dart does not currenlty support this API.

   .. tab::
      :tabid: java

      The Java SDK does not currently support this API.

   .. tab::
      :tabid: javascript

      .. include:: /includes/api-details/javascript/manage-files/reduce-file-size-compacted-copy.rst

   .. tab::
      :tabid: kotlin

      .. include:: /includes/api-details/kotlin/manage-files/reduce-file-size-compacted-copy.rst

   .. tab::
      :tabid: objectivec

      .. include:: /includes/api-details/objectivec/manage-files/reduce-file-size-compacted-copy.rst

   .. tab::
      :tabid: swift

      .. include:: /includes/api-details/swift/manage-files/reduce-file-size-compacted-copy.rst

   .. tab::
      :tabid: typescript

      .. include:: /includes/api-details/typescript/manage-files/reduce-file-size-compacted-copy.rst

.. for this one, might want to delete code block all together, since we didn't have examples for any of them. Or do
   we want to take the time to add the examples?

.. include:: /includes/sdk-examples/manage-files/reduce-file-size-compacted-copy.rst

.. _sdks-compaction-tips:

Tips for Manually Compacting a Realm
------------------------------------

.. include:: /includes/compaction-tips.rst

These calculations might look like this:

.. code-block:: javascript

   // Set a maxFileSize equal to 20MB in bytes
   const maxFileSize = 20 * 1024 * 1024;

   /* Check for the realm file size to be greater than the max file size, 
    * and the amount of bytes currently used to be less than 50% of the
    * total realm file size */
   return (totalBytes > (double)maxFileSize) &&
      ((double)usedBytes / totalBytes < 0.5);

Experiment with conditions to find the right balance of how often to 
compact realm files in your application.
