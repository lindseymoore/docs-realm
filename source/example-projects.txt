.. _realm-examples:

======================
Realm Example Projects
======================

Explore engineering and expert-provided example projects to learn best 
practices and common development patterns for Realm and Atlas App Services.

.. list-table::
  :header-rows: 1
  :widths: 25 50 25

  * - Project Name 
    - Description
    - Links for Available SDKs

  * - Large File Storage 
    - Store large files, such as images, on a remote server. Use Triggers and
      Functions to store the references. Leverage Realm's offline-first design
      to store large images, even when offline.
    - - `.NET <https://github.com/realm/realm-dotnet-lfs>`__
  
  * - User's Online State
    - Detect connectivity and activity of users and devices.
    - - `Kotlin <https://github.com/realm/realm-kotlin-samples/blob/main/AppServicesUsageSamples/apps/presence-detection/README.md>`__

  * - Connection State Change & Error Handling
    - Learn best practices around handling Sync errors and client reset strategies.
    - - `Kotlin <https://github.com/realm/realm-kotlin-samples/blob/main/AppServicesUsageSamples/apps/error-handling/README.md>`__
      - `Swift <https://github.com/realm/realm-swift-samples/blob/main/SyncConnectionStateErrorReset/README.md>`__

  * - Offline Login and Realm Access
    - Log in a Device Sync user and open a synced realm offline.
    - - `Kotlin <https://github.com/realm/realm-kotlin-samples/blob/main/AppServicesUsageSamples/apps/property-encryption/README.md>`__
      - `Swift <https://github.com/realm/realm-swift-samples/tree/main/OfflineLoginRealmAccess>`__

  * - Analytics/Telemetrics Data
    - Take sensor readings, push data to Atlas, and display the results in
      Atlas Charts or a time series collection.
    - - `.NET <https://github.com/realm/realm-dotnet-samples/tree/main/AnalyticsTelemetry>`__
      - `Swift <https://github.com/realm/realm-swift-samples/blob/main/AnalyticsTelemetricsData/README.md>`__

  * - Property-level Encryption
    - Enhance user data security with property-level encryption.
    - - `Kotlin <https://github.com/realm/realm-kotlin-samples/blob/main/AppServicesUsageSamples/apps/property-encryption/README.md>`__

  * - Realm with REST APIs
    - Use Realm for real-time operations together with REST APIs for 
      server-side business logic - all with a single ViewModel.
    - - `.NET <https://github.com/realm/xamarin-examples-architecture>`__

  * - Template Apps
    - A todo list mobile app that syncs data with App Services using Device Sync. See
      the App Services `Getting Started page <https://www.mongodb.com/docs/atlas/app-services/get-started/>`__ for more information 
      and detailed tutorials.  
    - - `Flutter <https://github.com/mongodb/template-app-dart-flutter-todo>`__
      - `Kotlin <https://github.com/mongodb/template-app-kotlin-todo>`__
      - `.NET <https://github.com/mongodb/template-app-maui-todo>`__
      - `React Native <https://github.com/mongodb/template-app-react-native-todo>`__
      - `Swift <https://github.com/mongodb/template-app-swiftui-todo>`__

  * - Shared Whiteboard
    - Create a drawing app that demonstrates the Realm mobile database and MongoDB Realm Sync.
    - - `Swift <https://github.com/realm/Realm-Drawing>`__

  * - Kilochat
    - Build a sample chat app, built with Realm and Atlas Device Sync.
    - - `Flutter <https://github.com/realm/realm-dart-samples/tree/kilochat/kilochat>`__

  * - Quick Journal
    - Build a synced journal app, built with Realm and Atlas Device Sync.
    - - `.NET <https://github.com/realm/realm-dotnet-samples/tree/main/QuickJournalSync>`__